I""<p>变量和常量是编程中必不可少的部分，也是很好理解的一部分。</p>

<h1 id="1标识符与关键字">1.标识符与关键字</h1>

<h3 id="11-标识符">1.1 标识符</h3>

<p>在编程语言中标识符就是程序员定义的具有特殊意义的词，比如变量名、常量名、函数名等等。 Go语言中标识符由字母数字和<code class="language-plaintext highlighter-rouge">_</code>(下划线）组成，并且只能以字母和<code class="language-plaintext highlighter-rouge">_</code>开头。 举几个例子：<code class="language-plaintext highlighter-rouge">abc</code>, <code class="language-plaintext highlighter-rouge">_</code>, <code class="language-plaintext highlighter-rouge">_123</code>, <code class="language-plaintext highlighter-rouge">a123</code>。</p>

<h3 id="12-关键字">1.2 关键字</h3>

<p>关键字是指编程语言中预先定义好的具有特殊含义的标识符。 关键字和保留字都不建议用作变量名。</p>

<p>Go语言中有25个关键字：</p>

<div class="language-go highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    <span class="k">break</span>        <span class="k">default</span>      <span class="k">func</span>         <span class="k">interface</span>    <span class="k">select</span>
    <span class="k">case</span>         <span class="k">defer</span>        <span class="k">go</span>           <span class="k">map</span>          <span class="k">struct</span>
    <span class="k">chan</span>         <span class="k">else</span>         <span class="k">goto</span>         <span class="k">package</span>      <span class="k">switch</span>
    <span class="k">const</span>        <span class="k">fallthrough</span>  <span class="k">if</span>           <span class="k">range</span>        <span class="k">type</span>
    <span class="k">continue</span>     <span class="k">for</span>          <span class="k">import</span>       <span class="k">return</span>       <span class="k">var</span>
</code></pre></div></div>

<p>此外，Go语言中还有37个保留字。</p>

<div class="language-go highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    <span class="n">Constants</span><span class="o">:</span>    <span class="no">true</span>  <span class="no">false</span>  <span class="no">iota</span>  <span class="no">nil</span>

        <span class="n">Types</span><span class="o">:</span>    <span class="kt">int</span>  <span class="kt">int8</span>  <span class="kt">int16</span>  <span class="kt">int32</span>  <span class="kt">int64</span>  
                  <span class="kt">uint</span>  <span class="kt">uint8</span>  <span class="kt">uint16</span>  <span class="kt">uint32</span>  <span class="kt">uint64</span>  <span class="kt">uintptr</span>
                  <span class="kt">float32</span>  <span class="kt">float64</span>  <span class="kt">complex128</span>  <span class="kt">complex64</span>
                  <span class="kt">bool</span>  <span class="kt">byte</span>  <span class="kt">rune</span>  <span class="kt">string</span>  <span class="kt">error</span>

    <span class="n">Functions</span><span class="o">:</span>   <span class="nb">make</span>  <span class="nb">len</span>  <span class="nb">cap</span>  <span class="nb">new</span>  <span class="nb">append</span>  <span class="nb">copy</span>  <span class="nb">close</span>  <span class="nb">delete</span>
                 <span class="nb">complex</span>  <span class="nb">real</span>  <span class="nb">imag</span>
                 <span class="nb">panic</span>  <span class="nb">recover</span>
</code></pre></div></div>

<h1 id="2变量">2.变量</h1>

<h3 id="21-变量的来历">2.1 变量的来历</h3>

<p>程序运行过程中的数据都是保存在内存中，我们想要在代码中操作某个数据时就需要去内存上找到这个变量，但是如果我们直接在代码中通过内存地址去操作变量的话，代码的可读性会非常差而且还容易出错，所以我们就利用变量将这个数据的内存地址保存起来，以后直接通过这个变量就能找到内存上对应的数据了。</p>

<h3 id="22-变量类型">2.2 变量类型</h3>

<p>变量（Variable）的功能是存储数据。不同的变量保存的数据类型可能会不一样。经过半个多世纪的发展，编程语言已经基本形成了一套固定的类型，常见变量的数据类型有：整型、浮点型、布尔型等。</p>

<p>Go语言中的每一个变量都有自己的类型，并且变量必须经过声明才能开始使用。</p>

<h3 id="23-变量声明">2.3 变量声明</h3>

<p>Go语言中的变量需要声明后才能使用，同一作用域内不支持重复声明。 并且Go语言的变量声明后必须使用。</p>

<blockquote>
  <h3 id="标准声明">标准声明</h3>
</blockquote>

<p>Go语言的变量声明格式为：</p>

<div class="language-go highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">var</span> <span class="n">变量名</span> <span class="n">变量类型</span>
</code></pre></div></div>

<p>变量声明以关键字<code class="language-plaintext highlighter-rouge">var</code>开头，变量类型放在变量的后面，行尾无需分号。 举个例子：</p>

<div class="language-go highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">var</span> <span class="n">name</span> <span class="kt">string</span>
<span class="k">var</span> <span class="n">age</span> <span class="kt">int</span>
<span class="k">var</span> <span class="n">isOk</span> <span class="kt">bool</span>
</code></pre></div></div>

<blockquote>
  <h3 id="批量声明">批量声明</h3>
</blockquote>

<p>每声明一个变量就需要写<code class="language-plaintext highlighter-rouge">var</code>关键字会比较繁琐，go语言中还支持批量变量声明：</p>

<div class="language-go highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">var</span> <span class="p">(</span>
    <span class="n">a</span> <span class="kt">string</span>
    <span class="n">b</span> <span class="kt">int</span>
    <span class="n">c</span> <span class="kt">bool</span>
    <span class="n">d</span> <span class="kt">float32</span>
<span class="p">)</span>
</code></pre></div></div>

<blockquote>
  <h3 id="变量的初始化">变量的初始化</h3>
</blockquote>

<p>Go语言在声明变量的时候，会自动对变量对应的内存区域进行初始化操作。每个变量会被初始化成其类型的默认值，例如： 整型和浮点型变量的默认值为<code class="language-plaintext highlighter-rouge">0</code>。 字符串变量的默认值为<code class="language-plaintext highlighter-rouge">空字符串</code>。 布尔型变量默认为<code class="language-plaintext highlighter-rouge">false</code>。 切片、函数、指针变量的默认为<code class="language-plaintext highlighter-rouge">nil</code>。</p>

<p>当然我们也可在声明变量的时候为其指定初始值。变量初始化的标准格式如下：</p>

<div class="language-go highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">var</span> <span class="n">变量名</span> <span class="n">类型</span> <span class="o">=</span> <span class="n">表达式</span>
</code></pre></div></div>

<p>举个例子：</p>

<div class="language-go highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">var</span> <span class="n">name</span> <span class="kt">string</span> <span class="o">=</span> <span class="s">"bear"</span>
<span class="k">var</span> <span class="n">age</span> <span class="kt">int</span> <span class="o">=</span> <span class="m">18</span>
</code></pre></div></div>

<p>或者一次初始化多个变量</p>

<div class="language-go highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">var</span> <span class="n">name</span><span class="p">,</span> <span class="n">age</span> <span class="o">=</span> <span class="s">"bear"</span><span class="p">,</span> <span class="m">20</span>
</code></pre></div></div>

<h5 id="类型推导">类型推导</h5>

<p>有时候我们会将变量的类型省略，这个时候编译器会根据等号右边的值来推导变量的类型完成初始化。</p>

<div class="language-go highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">var</span> <span class="n">name</span> <span class="o">=</span> <span class="s">"Q1mi"</span>
<span class="k">var</span> <span class="n">age</span> <span class="o">=</span> <span class="m">18</span>
</code></pre></div></div>

:ET